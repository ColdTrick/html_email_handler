<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="PPW Coding Standard">
    <description>This is the coding standard user for the Emogrifier code (without the unit tests).
        This standard has been tested with to work with PHP_CodeSniffer >= 1.4.5.
    </description>

    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Debug.ClosureLinter"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
    <!-- Enable this rule when the cyclomatic complexity of all methods is sufficiently low. -->
    <!--<rule ref="Generic.Metrics.CyclomaticComplexity"/>-->
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.UpperCaseConstant"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>

    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>

    <rule ref="PSR1.Classes.ClassDeclaration"/>
    <rule ref="PSR1.Files.SideEffects"/>

    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>

    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Classes.DuplicateProperty"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.ValidClassName"/>
    <rule ref="Squiz.CodeAnalysis.EmptyStatement"/>
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
    <rule ref="Squiz.Commenting.PostStatementComment"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions"/>
    <rule ref="Squiz.CSS.ColonSpacing"/>
    <rule ref="Squiz.CSS.DuplicateClassDefinition"/>
    <rule ref="Squiz.CSS.DuplicateStyleDefinition"/>
    <rule ref="Squiz.CSS.EmptyClassDefinition"/>
    <rule ref="Squiz.CSS.EmptyStyleDefinition"/>
    <rule ref="Squiz.CSS.Indentation"/>
    <rule ref="Squiz.CSS.LowercaseStyleDefinition"/>
    <rule ref="Squiz.CSS.MissingColon"/>
    <rule ref="Squiz.CSS.Opacity"/>
    <rule ref="Squiz.CSS.SemicolonSpacing"/>
    <rule ref="Squiz.Debug.JavaScriptLint"/>
    <rule ref="Squiz.Debug.JSLint"/>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.NamingConventions.ConstantCase"/>
    <rule ref="Squiz.Objects.ObjectMemberComma"/>
    <rule ref="Squiz.Operators.IncrementDecrementUsage"/>
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>
    <rule ref="Squiz.PHP.CommentedOutCode">
        <properties>
            <property name="maxPercentage" value="70"/>
        </properties>
    </rule>
    <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.ForbiddenFunctions"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

    <rule ref="TYPO3SniffPool.Classes.LowercaseClassKeywords"/>
    <rule ref="TYPO3SniffPool.Commenting.ClassDocComment"/>
    <rule ref="TYPO3SniffPool.Commenting.DoubleSlashCommentsInNewLine"/>
    <!-- Enable this rule when all functions have proper documentation comments. -->
    <!--<rule ref="TYPO3SniffPool.Commenting.FunctionDocComment"/>-->
    <rule ref="TYPO3SniffPool.Commenting.NoAuthorAnnotationInFunctionDocComment"/>
    <rule ref="TYPO3SniffPool.Commenting.SpaceAfterDoubleSlash"/>
    <rule ref="TYPO3SniffPool.ControlStructures.DisallowEachInLoopCondition"/>
    <rule ref="TYPO3SniffPool.ControlStructures.DisallowElseIfConstruct"/>
    <rule ref="TYPO3SniffPool.ControlStructures.ValidBreakStatementsInSwitches"/>
    <rule ref="TYPO3SniffPool.ControlStructures.ValidDefaultStatementsInSwitches"/>
    <rule ref="TYPO3SniffPool.Debug.DebugCode"/>
    <rule ref="TYPO3SniffPool.NamingConventions.ValidFunctionName"/>
    <rule ref="TYPO3SniffPool.NamingConventions.ValidVariableName"/>
    <rule ref="TYPO3SniffPool.PHP.DisallowMultiplePHPTags"/>
    <rule ref="TYPO3SniffPool.Strings.ConcatenationSpacing"/>
    <rule ref="TYPO3SniffPool.Strings.UnnecessaryStringConcat"/>
    <rule ref="TYPO3SniffPool.WhiteSpace.AssignmentArithmeticAndComparisonSpace"/>
    <rule ref="TYPO3SniffPool.WhiteSpace.AsteriksWhitespaces"/>
    <rule ref="TYPO3SniffPool.WhiteSpace.WhitespaceAfterCommentSigns"/>

    <rule ref="Zend.Files.ClosingTag"/>
</ruleset>